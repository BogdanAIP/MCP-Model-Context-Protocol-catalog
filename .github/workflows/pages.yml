name: Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with: { node-version: '20' }

      - name: Install deps (if any)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Merge index (optional)
        if: ${{ hashFiles('tools/merge-index.mjs') != '' }}
        run: node tools/merge-index.mjs

      - name: Build all static pages
        run: node tools/site-build.mjs
      - name: Postprocess site
        run: node tools/postbuild.mjs

      - name: Bundle registry, manifests and prompts into site
        run: |
          rm -rf site/registry site/servers site/prompts
          mkdir -p site/registry site/servers site/prompts
          cp -R registry/* site/registry/
          # copy local manifests so "Open manifest" never 404s
          find servers -name "mcp-server.json" -print0 | while IFS= read -r -d '' f; do
            d="site/$(dirname "$f")"; mkdir -p "$d"; cp "$f" "$d/"
          done
          # copy prompts for download links
          if [ -d prompts ]; then cp -R prompts/* site/prompts/ 2>/dev/null || true; fi
          echo "site contents:"; find site -maxdepth 2 -type f -printf "%P\n"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
